{"name": "字段输入场景：字母测试", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: Element <input class=\"right-item\" placeholder=\"请输入社会统一信用代码\" type=\"text\" id=\"creditNum\" name=\"creditNum\" oninput=\"if(value.length>18)value=value.slice(0,18);\" style=\"background: rgb(138, 43, 255);\"> is not clickable at point (716, 68). Other element would receive the click: <div class=\"popup\" id=\"falseAlert\" style=\"z-index: 20; display: block;\">...</div>\n  (Session info: chrome=78.0.3904.108)\n  (Driver info: chromedriver=2.43.600210 (68dcf5eebde37173d4027fa8635e332711d2874a),platform=Windows NT 6.1.7601 SP1 x86_64)", "trace": "self = <testcase.test_Taxcertify.TestTaxCertify object at 0x0000000003FBFC88>\nstep = '字母测试', creditNum = 'adkfhad', legalName = '杨伟传'\nlegalCardNo = 133025197102026633, teleNo = 18633793529, personNo = 4\n\n    @allure.story(\"字段输入\")\n    @allure.step(\"字段测试：社会统一信用代码\")\n    @allure.title(\"字段输入场景：{step}\")\n    @pytest.mark.parametrize(\"step,creditNum,legalName,legalCardNo,teleNo,personNo\",\n                             yaml.load(open(r\"E:\\Hogwarts\\python\\YSD\\data\\creditNum.yml\", encoding=\"UTF-8\")))\n    def test_input_creditNum(self,step,creditNum,legalName,legalCardNo,teleNo,personNo):\n>       self.page.check_input(creditNum,legalName,legalCardNo,teleNo,personNo)\n\ntestcase\\test_Taxcertify.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\Taxcertificationpage.py:85: in check_input\n    self.input_creditNum(creditNum)\npages\\Taxcertificationpage.py:42: in input_creditNum\n    self.set_value(self.find(self._credit_Num), creditNum)\npages\\basepage.py:36: in set_value\n    element.click()\n..\\douban\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:80: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\douban\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:633: in _execute\n    return self._parent.execute(command, params)\n..\\douban\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000000003CCE3C8>\nresponse = {'sessionId': '566a32b1ce656a7206d93abf96fa1999', 'status': 13, 'value': {'message': 'unknown error: Element <input cl...r info: chromedriver=2.43.600210 (68dcf5eebde37173d4027fa8635e332711d2874a),platform=Windows NT 6.1.7601 SP1 x86_64)'}}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: Element <input class=\"right-item\" placeholder=\"请输入社会统一信用代码\" type=\"text\" id=\"creditNum\" name=\"creditNum\" oninput=\"if(value.length>18)value=value.slice(0,18);\" style=\"background: rgb(138, 43, 255);\"> is not clickable at point (716, 68). Other element would receive the click: <div class=\"popup\" id=\"falseAlert\" style=\"z-index: 20; display: block;\">...</div>\nE         (Session info: chrome=78.0.3904.108)\nE         (Driver info: chromedriver=2.43.600210 (68dcf5eebde37173d4027fa8635e332711d2874a),platform=Windows NT 6.1.7601 SP1 x86_64)\n\n..\\douban\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: WebDriverException"}, "steps": [{"name": "字段测试：社会统一信用代码", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: Element <input class=\"right-item\" placeholder=\"请输入社会统一信用代码\" type=\"text\" id=\"creditNum\" name=\"creditNum\" oninput=\"if(value.length>18)value=value.slice(0,18);\" style=\"background: rgb(138, 43, 255);\"> is not clickable at point (716, 68). Other element would receive the click: <div class=\"popup\" id=\"falseAlert\" style=\"z-index: 20; display: block;\">...</div>\n  (Session info: chrome=78.0.3904.108)\n  (Driver info: chromedriver=2.43.600210 (68dcf5eebde37173d4027fa8635e332711d2874a),platform=Windows NT 6.1.7601 SP1 x86_64)\n\n", "trace": "  File \"E:\\Hogwarts\\python\\douban\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"E:\\Hogwarts\\python\\YSD\\testcase\\test_Taxcertify.py\", line 35, in test_input_creditNum\n    self.page.check_input(creditNum,legalName,legalCardNo,teleNo,personNo)\n  File \"E:\\Hogwarts\\python\\YSD\\pages\\Taxcertificationpage.py\", line 85, in check_input\n    self.input_creditNum(creditNum)\n  File \"E:\\Hogwarts\\python\\YSD\\pages\\Taxcertificationpage.py\", line 42, in input_creditNum\n    self.set_value(self.find(self._credit_Num), creditNum)\n  File \"E:\\Hogwarts\\python\\YSD\\pages\\basepage.py\", line 36, in set_value\n    element.click()\n  File \"E:\\Hogwarts\\python\\douban\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 80, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"E:\\Hogwarts\\python\\douban\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 633, in _execute\n    return self._parent.execute(command, params)\n  File \"E:\\Hogwarts\\python\\douban\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"E:\\Hogwarts\\python\\douban\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "step", "value": "'字母测试'"}, {"name": "creditNum", "value": "'adkfhad'"}, {"name": "legalName", "value": "'杨伟传'"}, {"name": "legalCardNo", "value": "133025197102026633"}, {"name": "teleNo", "value": "18633793529"}, {"name": "personNo", "value": "4"}], "start": 1597917474379, "stop": 1597917474455}], "parameters": [{"name": "step", "value": "'字母测试'"}, {"name": "creditNum", "value": "'adkfhad'"}, {"name": "legalName", "value": "'杨伟传'"}, {"name": "legalCardNo", "value": "133025197102026633"}, {"name": "teleNo", "value": "18633793529"}, {"name": "personNo", "value": "4"}], "start": 1597917474379, "stop": 1597917474456, "uuid": "ea4417b9-a560-484f-9fe6-fbf92621a952", "historyId": "ac78bdf9df422deabcb8fd20471018dc", "testCaseId": "7ca0c3f87d74970f9c087b489d1f387d", "fullName": "testcase.test_Taxcertify.TestTaxCertify#test_input_creditNum", "labels": [{"name": "story", "value": "字段输入"}, {"name": "feature", "value": "测试税务认证页面"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_Taxcertify"}, {"name": "subSuite", "value": "TestTaxCertify"}, {"name": "host", "value": "isuser-PC"}, {"name": "thread", "value": "14876-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_Taxcertify"}]}