{
  "uid" : "daa61a0e4cb22b65",
  "name" : "字段输入场景：特殊字符测试",
  "fullName" : "testcase.test_Taxcertify.TestTaxCertify#test_input_creditNum",
  "historyId" : "5cf1e0d725d0fd57df509970dc1a59a4",
  "time" : {
    "start" : 1597917668586,
    "stop" : 1597917670321,
    "duration" : 1735
  },
  "status" : "broken",
  "statusMessage" : "TypeError: not all arguments converted during string formatting",
  "statusTrace" : "self = <testcase.test_Taxcertify.TestTaxCertify object at 0x0000000002E74780>\nstep = '特殊字符测试', creditNum = '！@#￥%……&', legalName = '杨伟传'\nlegalCardNo = 133025197102026633, teleNo = 18633793529, personNo = 4\n\n    @allure.story(\"字段输入\")\n    @allure.step(\"字段测试：社会统一信用代码\")\n    @allure.title(\"字段输入场景：{step}\")\n    @pytest.mark.parametrize(\"step,creditNum,legalName,legalCardNo,teleNo,personNo\",\n                             yaml.load(open(r\"E:\\Hogwarts\\python\\YSD\\data\\creditNum.yml\", encoding=\"UTF-8\")))\n    def test_input_creditNum(self,step,creditNum,legalName,legalCardNo,teleNo,personNo):\n        self.page.check_input(creditNum,legalName,legalCardNo,teleNo,personNo)\n>       assert self.page.get_result() == \"\"\n\ntestcase\\test_Taxcertify.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\Taxcertificationpage.py:98: in get_result\n    logging.info(\"获取到的信息:\",self.text)\nC:\\Program Files\\Python36\\lib\\logging\\__init__.py:1900: in info\n    root.info(msg, *args, **kwargs)\nC:\\Program Files\\Python36\\lib\\logging\\__init__.py:1306: in info\n    self._log(INFO, msg, args, **kwargs)\nC:\\Program Files\\Python36\\lib\\logging\\__init__.py:1442: in _log\n    self.handle(record)\nC:\\Program Files\\Python36\\lib\\logging\\__init__.py:1452: in handle\n    self.callHandlers(record)\nC:\\Program Files\\Python36\\lib\\logging\\__init__.py:1514: in callHandlers\n    hdlr.handle(record)\nC:\\Program Files\\Python36\\lib\\logging\\__init__.py:863: in handle\n    self.emit(record)\n..\\douban\\venv\\lib\\site-packages\\_pytest\\logging.py:326: in emit\n    super().emit(record)\nC:\\Program Files\\Python36\\lib\\logging\\__init__.py:998: in emit\n    self.handleError(record)\nC:\\Program Files\\Python36\\lib\\logging\\__init__.py:992: in emit\n    msg = self.format(record)\nC:\\Program Files\\Python36\\lib\\logging\\__init__.py:838: in format\n    return fmt.format(record)\n..\\douban\\venv\\lib\\site-packages\\_pytest\\logging.py:89: in format\n    return super().format(record)\nC:\\Program Files\\Python36\\lib\\logging\\__init__.py:575: in format\n    record.message = record.getMessage()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <LogRecord: root, 20, E:\\Hogwarts\\python\\YSD\\pages\\Taxcertificationpage.py, 98, \"获取到的信息:\">\n\n    def getMessage(self):\n        \"\"\"\n        Return the message for this LogRecord.\n    \n        Return the message for this LogRecord after merging any user-supplied\n        arguments with the message.\n        \"\"\"\n        msg = str(self.msg)\n        if self.args:\n>           msg = msg % self.args\nE           TypeError: not all arguments converted during string formatting\n\nC:\\Program Files\\Python36\\lib\\logging\\__init__.py:338: TypeError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1597917656487,
      "stop" : 1597917659476,
      "duration" : 2989
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "TypeError: not all arguments converted during string formatting",
    "statusTrace" : "self = <testcase.test_Taxcertify.TestTaxCertify object at 0x0000000002E74780>\nstep = '特殊字符测试', creditNum = '！@#￥%……&', legalName = '杨伟传'\nlegalCardNo = 133025197102026633, teleNo = 18633793529, personNo = 4\n\n    @allure.story(\"字段输入\")\n    @allure.step(\"字段测试：社会统一信用代码\")\n    @allure.title(\"字段输入场景：{step}\")\n    @pytest.mark.parametrize(\"step,creditNum,legalName,legalCardNo,teleNo,personNo\",\n                             yaml.load(open(r\"E:\\Hogwarts\\python\\YSD\\data\\creditNum.yml\", encoding=\"UTF-8\")))\n    def test_input_creditNum(self,step,creditNum,legalName,legalCardNo,teleNo,personNo):\n        self.page.check_input(creditNum,legalName,legalCardNo,teleNo,personNo)\n>       assert self.page.get_result() == \"\"\n\ntestcase\\test_Taxcertify.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\Taxcertificationpage.py:98: in get_result\n    logging.info(\"获取到的信息:\",self.text)\nC:\\Program Files\\Python36\\lib\\logging\\__init__.py:1900: in info\n    root.info(msg, *args, **kwargs)\nC:\\Program Files\\Python36\\lib\\logging\\__init__.py:1306: in info\n    self._log(INFO, msg, args, **kwargs)\nC:\\Program Files\\Python36\\lib\\logging\\__init__.py:1442: in _log\n    self.handle(record)\nC:\\Program Files\\Python36\\lib\\logging\\__init__.py:1452: in handle\n    self.callHandlers(record)\nC:\\Program Files\\Python36\\lib\\logging\\__init__.py:1514: in callHandlers\n    hdlr.handle(record)\nC:\\Program Files\\Python36\\lib\\logging\\__init__.py:863: in handle\n    self.emit(record)\n..\\douban\\venv\\lib\\site-packages\\_pytest\\logging.py:326: in emit\n    super().emit(record)\nC:\\Program Files\\Python36\\lib\\logging\\__init__.py:998: in emit\n    self.handleError(record)\nC:\\Program Files\\Python36\\lib\\logging\\__init__.py:992: in emit\n    msg = self.format(record)\nC:\\Program Files\\Python36\\lib\\logging\\__init__.py:838: in format\n    return fmt.format(record)\n..\\douban\\venv\\lib\\site-packages\\_pytest\\logging.py:89: in format\n    return super().format(record)\nC:\\Program Files\\Python36\\lib\\logging\\__init__.py:575: in format\n    record.message = record.getMessage()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <LogRecord: root, 20, E:\\Hogwarts\\python\\YSD\\pages\\Taxcertificationpage.py, 98, \"获取到的信息:\">\n\n    def getMessage(self):\n        \"\"\"\n        Return the message for this LogRecord.\n    \n        Return the message for this LogRecord after merging any user-supplied\n        arguments with the message.\n        \"\"\"\n        msg = str(self.msg)\n        if self.args:\n>           msg = msg % self.args\nE           TypeError: not all arguments converted during string formatting\n\nC:\\Program Files\\Python36\\lib\\logging\\__init__.py:338: TypeError",
    "steps" : [ {
      "name" : "字段测试：社会统一信用代码",
      "time" : {
        "start" : 1597917668586,
        "stop" : 1597917670320,
        "duration" : 1734
      },
      "status" : "broken",
      "statusMessage" : "TypeError: not all arguments converted during string formatting\n",
      "statusTrace" : "  File \"E:\\Hogwarts\\python\\douban\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"E:\\Hogwarts\\python\\YSD\\testcase\\test_Taxcertify.py\", line 36, in test_input_creditNum\n    assert self.page.get_result() == \"\"\n  File \"E:\\Hogwarts\\python\\YSD\\pages\\Taxcertificationpage.py\", line 98, in get_result\n    logging.info(\"获取到的信息:\",self.text)\n  File \"C:\\Program Files\\Python36\\lib\\logging\\__init__.py\", line 1900, in info\n    root.info(msg, *args, **kwargs)\n  File \"C:\\Program Files\\Python36\\lib\\logging\\__init__.py\", line 1306, in info\n    self._log(INFO, msg, args, **kwargs)\n  File \"C:\\Program Files\\Python36\\lib\\logging\\__init__.py\", line 1442, in _log\n    self.handle(record)\n  File \"C:\\Program Files\\Python36\\lib\\logging\\__init__.py\", line 1452, in handle\n    self.callHandlers(record)\n  File \"C:\\Program Files\\Python36\\lib\\logging\\__init__.py\", line 1514, in callHandlers\n    hdlr.handle(record)\n  File \"C:\\Program Files\\Python36\\lib\\logging\\__init__.py\", line 863, in handle\n    self.emit(record)\n  File \"E:\\Hogwarts\\python\\douban\\venv\\lib\\site-packages\\_pytest\\logging.py\", line 326, in emit\n    super().emit(record)\n  File \"C:\\Program Files\\Python36\\lib\\logging\\__init__.py\", line 998, in emit\n    self.handleError(record)\n  File \"C:\\Program Files\\Python36\\lib\\logging\\__init__.py\", line 992, in emit\n    msg = self.format(record)\n  File \"C:\\Program Files\\Python36\\lib\\logging\\__init__.py\", line 838, in format\n    return fmt.format(record)\n  File \"E:\\Hogwarts\\python\\douban\\venv\\lib\\site-packages\\_pytest\\logging.py\", line 89, in format\n    return super().format(record)\n  File \"C:\\Program Files\\Python36\\lib\\logging\\__init__.py\", line 575, in format\n    record.message = record.getMessage()\n  File \"C:\\Program Files\\Python36\\lib\\logging\\__init__.py\", line 338, in getMessage\n    msg = msg % self.args\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "step",
        "value" : "'特殊字符测试'"
      }, {
        "name" : "creditNum",
        "value" : "'！@#￥%……&'"
      }, {
        "name" : "legalName",
        "value" : "'杨伟传'"
      }, {
        "name" : "legalCardNo",
        "value" : "133025197102026633"
      }, {
        "name" : "teleNo",
        "value" : "18633793529"
      }, {
        "name" : "personNo",
        "value" : "4"
      } ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ {
      "uid" : "6115ecfa7100c96e",
      "name" : "log",
      "source" : "6115ecfa7100c96e.txt",
      "type" : "text/plain",
      "size" : 73
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "hasContent" : true,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1597917670594,
      "stop" : 1597917670690,
      "duration" : 96
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "字段输入"
  }, {
    "name" : "feature",
    "value" : "测试税务认证页面"
  }, {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "test_Taxcertify"
  }, {
    "name" : "subSuite",
    "value" : "TestTaxCertify"
  }, {
    "name" : "host",
    "value" : "isuser-PC"
  }, {
    "name" : "thread",
    "value" : "97136-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.test_Taxcertify"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "creditNum",
    "value" : "'！@#￥%……&'"
  }, {
    "name" : "legalCardNo",
    "value" : "133025197102026633"
  }, {
    "name" : "legalName",
    "value" : "'杨伟传'"
  }, {
    "name" : "personNo",
    "value" : "4"
  }, {
    "name" : "step",
    "value" : "'特殊字符测试'"
  }, {
    "name" : "teleNo",
    "value" : "18633793529"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "daa61a0e4cb22b65.json",
  "parameterValues" : [ "'！@#￥%……&'", "133025197102026633", "'杨伟传'", "4", "'特殊字符测试'", "18633793529" ]
}